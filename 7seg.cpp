#include<stdio.h>
#include<stdlib.h>
#include <math.h>

void main() {
	char ch;
	int i, j, p, l, out[10], jum, ERR[10];
	int x[10][8] =
	{
		// a b c d e f g h
		  {1,1,1,1,1,1,0,1}, //0
		  {0,1,1,0,0,0,0,1}, //1
		  {1,1,0,1,1,0,1,1}, //2
		  {1,1,1,1,0,0,1,1}, //3
		  {0,1,1,0,0,1,1,1}, //4
		  {1,0,1,1,0,1,1,1}, //5
		  {0,0,1,1,1,1,1,1}, //6
		  {1,1,1,0,0,0,0,1}, //7
		  {1,1,1,1,1,1,1,1}, //8
		  {1,1,1,0,0,1,1,1}, //9
	};
	int T[10][10]=
	{
		//0 1 2 3 4 5 6 7 8 9
		{1,0,0,0,0,0,0,0,0,0},
		{0,1,0,0,0,0,0,0,0,0},
		{0,0,1,0,0,0,0,0,0,0},
		{0,0,0,1,0,0,0,0,0,0},
		{0,0,0,0,1,0,0,0,0,0},
		{0,0,0,0,0,1,0,0,0,0},
		{0,0,0,0,0,0,1,0,0,0},
		{0,0,0,0,0,0,0,1,0,0},
		{0,0,0,0,0,0,0,0,1,0},
		{0,0,0,0,0,0,0,0,0,1}
	};
	float w[10][8], O[10], LR = 0.1f, init = 0.15f, error;

	//inisialisasi bobot
	for (l = 0; l < 100; l++) {
		error = 0.0f; 
		jum = 1;
		for (p = 0; p < 10; p++) 
		{
			for ( i = 0; i < 8; i++)
			{
				O[j] = O[j] + x[p][i] * w[j][i];
			}
			if (O[j]>0.0)
			{
				out[j] = 1;
			}
			else
			{
				out[j] = 0;
			}
			ERR[j] = T[p][j] - out[j];
			error = fabs(error + ERR[j]);
			jum++;

			if (ERR[j] != 0)
			{

			}
		}
	}
}